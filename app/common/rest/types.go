// Package rest provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package rest

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	JWTAuthScopes = "JWTAuth.Scopes"
)

// AccessTokenResponse defines model for AccessTokenResponse.
type AccessTokenResponse struct {
	AccessToken string `json:"access_token"`
}

// AccountResponse defines model for AccountResponse.
type AccountResponse struct {
	BirthDate      openapi_types.Date `json:"birth_date"`
	CurrentCountry string             `json:"current_country"`
	Email          string             `json:"email"`
	FirstName      string             `json:"first_name"`
	LastName       string             `json:"last_name"`
	Nickname       string             `json:"nickname"`
}

// CaptchaResponse defines model for CaptchaResponse.
type CaptchaResponse struct {
	Captcha   string  `json:"captcha"`
	CaptchaId string  `json:"captcha_id"`
	PipeId    *string `json:"pipe_id,omitempty"`
}

// GenerateCaptchaRequest defines model for GenerateCaptchaRequest.
type GenerateCaptchaRequest struct {
	CaptchaType int `json:"captcha_type" validate:"required,oneof=1 2"`
}

// HandleSessionsOverflowRequest defines model for HandleSessionsOverflowRequest.
type HandleSessionsOverflowRequest struct {
	Email     string `json:"email" validate:"required,email"`
	PipeId    string `json:"pipe_id" validate:"required,uuid"`
	VerifCode string `json:"verif_code" validate:"required,numeric"`
}

// HandleSessionsOverflowResponse defines model for HandleSessionsOverflowResponse.
type HandleSessionsOverflowResponse struct {
	AccessToken string `json:"access_token"`
}

// IsCaptchaForSignInResponse defines model for IsCaptchaForSignInResponse.
type IsCaptchaForSignInResponse struct {
	IsCaptcha bool `json:"is_captcha"`
}

// PasswordReset defines model for PasswordReset.
type PasswordReset struct {
	Email       string `json:"email" validate:"required,email"`
	NewPassword string `json:"new_password" validate:"required,gte=10,password"`
	PipeId      string `json:"pipe_id" validate:"required,uuid"`
	VerifCode   string `json:"verif_code" validate:"required,numeric"`
}

// PasswordResetRequest defines model for PasswordResetRequest.
type PasswordResetRequest struct {
	CaptchaId             string `json:"captcha_id" validate:"required,base64"`
	Email                 string `json:"email" validate:"required,email"`
	ProvidedCaptchaAnswer string `json:"provided_captcha_answer" validate:"required,numeric"`
}

// RefreshTokenResponse defines model for RefreshTokenResponse.
type RefreshTokenResponse struct {
	RefreshToken string `json:"refresh_token"`
}

// ReqForPasswordResetResponse defines model for ReqForPasswordResetResponse.
type ReqForPasswordResetResponse struct {
	PipeId string `json:"pipe_id"`
}

// SendCodeToCleanSessionsRequest defines model for SendCodeToCleanSessionsRequest.
type SendCodeToCleanSessionsRequest struct {
	Email  string `json:"email" validate:"required,email"`
	PipeId string `json:"pipe_id" validate:"required,uuid"`
}

// SignInRequest defines model for SignInRequest.
type SignInRequest struct {
	CaptchaId             string `json:"captcha_id" validate:"omitempty,base64"`
	Email                 string `json:"email" validate:"required,email"`
	Password              string `json:"password" validate:"required"`
	ProvidedCaptchaAnswer string `json:"provided_captcha_answer" validate:"omitempty,numeric"`
}

// SignInResponse defines model for SignInResponse.
type SignInResponse struct {
	AccessToken string `json:"access_token"`
}

// SignUpRequest defines model for SignUpRequest.
type SignUpRequest struct {
	PipeId    string `json:"pipe_id" validate:"required,uuid"`
	VerifCode string `json:"verif_code" validate:"required,numeric"`
}

// StartSignUpPipeRequest defines model for StartSignUpPipeRequest.
type StartSignUpPipeRequest struct {
	CaptchaId             string `json:"captcha_id" validate:"required,base64"`
	Email                 string `json:"email" validate:"required,email"`
	Nickname              string `json:"nickname" validate:"required,alphanum"`
	Password              string `json:"password" validate:"required,gte=10,password"`
	ProvidedCaptchaAnswer string `json:"provided_captcha_answer" validate:"required,numeric"`
}

// StartSignUpPipeResponse defines model for StartSignUpPipeResponse.
type StartSignUpPipeResponse struct {
	PipeId string `json:"pipe_id"`
}

// UpdateAccountRequest defines model for UpdateAccountRequest.
type UpdateAccountRequest struct {
	BirthDate      openapi_types.Date `json:"birth_date" validate:"required"`
	CurrentCountry string             `json:"current_country" validate:"required,country"`
	FirstName      string             `json:"first_name" validate:"omitempty,alpha"`
	LastName       string             `json:"last_name" validate:"omitempty,alpha"`
}

// UpdatePasswordRequest defines model for UpdatePasswordRequest.
type UpdatePasswordRequest struct {
	FeelLikeGetHacked string `json:"feel_like_get_hacked" validate:"required,boolean"`
	NewPassword       string `json:"new_password" validate:"required,gte=10,password"`
	VerifCode         string `json:"verif_code" validate:"required,numeric"`
}

// ValidationError defines model for ValidationError.
type ValidationError struct {
	Error  *string   `json:"error,omitempty"`
	Errors *[]string `json:"errors,omitempty"`
}

// VerifCodeForSignUpRequest defines model for VerifCodeForSignUpRequest.
type VerifCodeForSignUpRequest struct {
	PipeId string `json:"pipe_id" validate:"required,uuid"`
}

// GetAccountsEmailParams defines parameters for GetAccountsEmail.
type GetAccountsEmailParams struct {
	// Email Email to check
	Email string `form:"email" json:"email"`
}

// GetAccountsNicknameParams defines parameters for GetAccountsNickname.
type GetAccountsNicknameParams struct {
	// Nickname Nickname to check
	Nickname string `form:"nickname" json:"nickname"`
}

// GetAccountsSignInCaptchaCheckParams defines parameters for GetAccountsSignInCaptchaCheck.
type GetAccountsSignInCaptchaCheckParams struct {
	Email string `form:"email" json:"email"`
}

// PutAccountsJSONRequestBody defines body for PutAccounts for application/json ContentType.
type PutAccountsJSONRequestBody = UpdateAccountRequest

// PostAccountsPasswordResetJSONRequestBody defines body for PostAccountsPasswordReset for application/json ContentType.
type PostAccountsPasswordResetJSONRequestBody = PasswordReset

// PostAccountsPasswordResetRequestJSONRequestBody defines body for PostAccountsPasswordResetRequest for application/json ContentType.
type PostAccountsPasswordResetRequestJSONRequestBody = PasswordResetRequest

// SendVerifCodeToCleanSessionsJSONRequestBody defines body for SendVerifCodeToCleanSessions for application/json ContentType.
type SendVerifCodeToCleanSessionsJSONRequestBody = SendCodeToCleanSessionsRequest

// SendVerifCodeJSONRequestBody defines body for SendVerifCode for application/json ContentType.
type SendVerifCodeJSONRequestBody = VerifCodeForSignUpRequest

// UpdatePasswordJSONRequestBody defines body for UpdatePassword for application/json ContentType.
type UpdatePasswordJSONRequestBody = UpdatePasswordRequest

// PostAccountsSessionsOverflowHandlingJSONRequestBody defines body for PostAccountsSessionsOverflowHandling for application/json ContentType.
type PostAccountsSessionsOverflowHandlingJSONRequestBody = HandleSessionsOverflowRequest

// SignInJSONRequestBody defines body for SignIn for application/json ContentType.
type SignInJSONRequestBody = SignInRequest

// SignUpJSONRequestBody defines body for SignUp for application/json ContentType.
type SignUpJSONRequestBody = SignUpRequest

// PostAccountsSignUpPipeJSONRequestBody defines body for PostAccountsSignUpPipe for application/json ContentType.
type PostAccountsSignUpPipeJSONRequestBody = StartSignUpPipeRequest

// PostCaptchaJSONRequestBody defines body for PostCaptcha for application/json ContentType.
type PostCaptchaJSONRequestBody = GenerateCaptchaRequest
